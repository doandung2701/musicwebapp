spring:
    datasource:
        url: jdbc:mysql://localhost:3306/music?useSSL=false&allowPublicKeyRetrieval=true
        username: root
        password: giang1998@

    jpa:
        show-sql: true
        hibernate:
            ddl-auto: update
            naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
        properties:
            hibernate:
                dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    security:
      oauth2:
        client:
          registration:
            google:
              clientId: 972637202266-u70okg2jvjuakvdr9i4jbi6pim935m8a.apps.googleusercontent.com
              clientSecret: -EyolyVuh7_UOH-D3jKZCNGB
              redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - profile
            facebook:
              clientId: 408820223260317
              clientSecret: fef23b55bf3f9084308a6d492ae4bc4a
              redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - public_profile
            github:
              clientId: 2040bf4812b3a61b153a
              clientSecret: 746bcef16b7a4fe3e9e288654e77691b1bac2d20
              redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - user:email
                - read:user
          provider:
            facebook:
              authorizationUri: https://www.facebook.com/v3.2/dialog/oauth
              tokenUri: https://graph.facebook.com/v3.2/oauth/access_token
              userInfoUri: https://graph.facebook.com/v3.2/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
    servlet:
      multipart:
        max-file-size: 20MB
        max-request-size: 50MB
app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - https://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect
server:
  ssl:
    key-store: classpath:keystore-giang.p12
    key-store-password: giangnt15
    keyStoreType: PKCS12
    keyAlias: tomcat
  port: 8443
file:
  upload-dir: ./uploads



